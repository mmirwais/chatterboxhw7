{
  "_from": "wscat",
  "_id": "wscat@4.0.0",
  "_inBundle": false,
  "_integrity": "sha512-ybN7fbemnFE/YY5UhkoLzNPs5TpiXOkwPeN6P4z7JEEuzpkNs4I6ysHT7cGEaj4lDo6l89jyk4Acq+Zm2b1SDg==",
  "_location": "/wscat",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "wscat",
    "fetchSpec": "latest",
    "name": "wscat",
    "raw": "wscat",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/wscat/-/wscat-4.0.0.tgz",
  "_shasum": "788cc40c058236d9c3674b964d5637415090aad8",
  "_spec": "wscat",
  "_where": "/home/fesh/Documents/School/Spring2020/feweb/Chattrbox",
  "author": {
    "name": "Arnout Kazemier, Einar Otto Stangvik"
  },
  "bin": {
    "wscat": "bin/wscat"
  },
  "bugs": {
    "url": "https://github.com/websockets/wscat/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "commander": "^4.0.0",
    "https-proxy-agent": "^3.0.0",
    "read": "^1.0.7",
    "ws": "^7.1.2"
  },
  "deprecated": false,
  "description": "WebSocket cat",
  "devDependencies": {},
  "homepage": "https://github.com/websockets/wscat#readme",
  "keywords": [
    "cat",
    "websocket",
    "wscat"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "wscat",
  "optionalDependencies": {},
  "readme": "# wscat\n\nWebSocket cat.\n\n## Installation\n\nThis module needs to be installed globally so use the `-g` flag when installing:\n\n```\nnpm install -g wscat\n```\n\n## Usage\n\n```\nUsage: wscat [options] (--listen <port> | --connect <url>)\n\nOptions:\n  -V, --version                       output the version number\n  -l, --listen <port>                 listen on port\n  -c, --connect <url>                 connect to a WebSocket server\n  -p, --protocol <version>            optional protocol version\n  -o, --origin <origin>               optional origin\n  -x, --execute <command>             execute command after connecting\n  -w, --wait <seconds>                wait given seconds after executing command\n  -P, --show-ping-pong                print a notification when a ping or pong is received\n  --host <host>                       optional host\n  -s, --subprotocol <protocol>        optional subprotocol (default: [])\n  -n, --no-check                      do not check for unauthorized certificates\n  -H, --header <header:value>         set an HTTP header. Repeat to set multiple (--connect only) (default: [])\n  --auth <username:password>          add basic HTTP authentication header (--connect only)\n  --ca <ca>                           specify a Certificate Authority (--connect only)\n  --cert <cert>                       specify a Client SSL Certificate (--connect only)\n  --key <key>                         specify a Client SSL Certificate's key (--connect only)\n  --passphrase [passphrase]           specify a Client SSL Certificate Key's passphrase (--connect only). If you don't provide a value, it will be prompted for\n  --no-color                          run without color\n  --slash                             enable slash commands for control frames (/ping, /pong, /close [code [, reason]])\n  --proxy <[protocol://]host[:port]>  connect via a proxy. Proxy must support CONNECT method\n  -h, --help                          output usage information\n```\n\n## Example\n\n```\n$ wscat -c ws://echo.websocket.org\nConnected (press CTRL+C to quit)\n> hi there\n< hi there\n> are you a happy parrot?\n< are you a happy parrot?\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/websockets/wscat.git"
  },
  "scripts": {
    "test": "echo \"No test specified\""
  },
  "version": "4.0.0"
}
